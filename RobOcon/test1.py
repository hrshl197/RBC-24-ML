"""
class StateNode:
    def __init__(self, state, parent=None):
        self.state = state
        self.parent = parent
        self.children = []

    def add_child(self, child_state):
        child_node = StateNode(child_state, parent=self)
        self.children.append(child_node)
        return child_node

def print_state_space_tree(node, level=0):
    print("  " * level + str(node.state))
    for child in node.children:
        print_state_space_tree(child, level + 1)

# Example usage:
initial_state = [["","",""],["","",""],["","",""],["","",""],["","",""]]
root = StateNode(initial_state)

child_state_B1 = [["","","O"],["","",""],["","",""],["","",""],["","",""]]
child_state_C1 = [["","",""],["","","O"],["","",""],["","",""],["","",""]]
child_state_D1 = [["","",""],["","",""],["","","O"],["","",""],["","",""]]
child_state_E1 = [["","",""],["","",""],["","",""],["","","O"],["","",""]]
child_state_F1 = [["","",""],["","",""],["","",""],["","",""],["","","O"]]
child_state_B2 = [["","","X"],["","",""],["","",""],["","",""],["","",""]]
child_state_C2 = [["","",""],["","","X"],["","",""],["","",""],["","",""]]
child_state_D2 = [["","",""],["","",""],["","","X"],["","",""],["","",""]]
child_state_E2 = [["","",""],["","",""],["","",""],["","","X"],["","",""]]
child_state_F2 = [["","",""],["","",""],["","",""],["","",""],["","","X"]]

node_B1 = root.add_child(child_state_B1)
node_C1 = root.add_child(child_state_C1)
node_D1 = root.add_child(child_state_D1)
node_E1 = root.add_child(child_state_E1)
node_F1 = root.add_child(child_state_F1)
node_B2 = root.add_child(child_state_B2)
node_C2 = root.add_child(child_state_C2)
node_D2 = root.add_child(child_state_D2)
node_E2 = root.add_child(child_state_E2)
node_F2 = root.add_child(child_state_F2)

#á¹‡node_G1 = node_B1.add_child(child_state_G1)


print_state_space_tree(root)

[['', '', ''], ['', '', ''], ['', '', ''], ['', '', ''], ['', '', '']]
  [['', '', 'O'], ['', '', ''], ['', '', ''], ['', '', ''], ['', '', '']]
    [['', 'O', 'O'], ['', '', ''], ['', '', ''], ['', '', ''], ['', '', '']]
    [['', '', 'O'], ['', '', 'O'], ['', '', ''], ['', '', ''], ['', '', '']]
    [['', '', 'O'], ['', '', ''], ['', '', 'O'], ['', '', ''], ['', '', '']]
    [['', '', 'O'], ['', '', ''], ['', '', ''], ['', '', 'O'], ['', '', '']]
    [['', '', 'O'], ['', '', ''], ['', '', ''], ['', '', ''], ['', '', 'O']]
    [['', 'X', 'O'], ['', '', ''], ['', '', ''], ['', '', ''], ['', '', '']]
    [['', '', 'O'], ['', '', 'X'], ['', '', ''], ['', '', ''], ['', '', '']]
    [['', '', 'O'], ['', '', ''], ['', '', 'X'], ['', '', ''], ['', '', '']]
    [['', '', 'O'], ['', '', ''], ['', '', ''], ['', '', 'X'], ['', '', '']]
    [['', '', 'O'], ['', '', ''], ['', '', ''], ['', '', ''], ['', '', 'X']]
  [['', '', ''], ['', '', 'O'], ['', '', ''], ['', '', ''], ['', '', '']]
    [['', '', 'O'], ['', '', 'O'], ['', '', ''], ['', '', ''], ['', '', '']]
    [['', '', ''], ['', 'O', 'O'], ['', '', ''], ['', '', ''], ['', '', '']]
    [['', '', ''], ['', '', 'O'], ['', '', 'O'], ['', '', ''], ['', '', '']]
    [['', '', ''], ['', '', 'O'], ['', '', ''], ['', '', 'O'], ['', '', '']]
    [['', '', ''], ['', '', 'O'], ['', '', ''], ['', '', ''], ['', '', 'O']]
    [['', '', 'X'], ['', '', 'O'], ['', '', ''], ['', '', ''], ['', '', '']]
    [['', '', ''], ['', 'X', 'O'], ['', '', ''], ['', '', ''], ['', '', '']]
    [['', '', ''], ['', '', 'O'], ['', '', 'X'], ['', '', ''], ['', '', '']]
    [['', '', ''], ['', '', 'O'], ['', '', ''], ['', '', 'X'], ['', '', '']]
    [['', '', ''], ['', '', 'O'], ['', '', ''], ['', '', ''], ['', '', 'X']]
  [['', '', ''], ['', '', ''], ['', '', 'O'], ['', '', ''], ['', '', '']]
    [['', '', 'O'], ['', '', ''], ['', '', 'O'], ['', '', ''], ['', '', '']]
    [['', '', ''], ['', '', 'O'], ['', '', 'O'], ['', '', ''], ['', '', '']]
    [['', '', ''], ['', '', ''], ['', 'O', 'O'], ['', '', ''], ['', '', '']]
    [['', '', ''], ['', '', ''], ['', '', 'O'], ['', '', 'O'], ['', '', '']]
    [['', '', ''], ['', '', ''], ['', '', 'O'], ['', '', ''], ['', '', 'O']]
    [['', '', 'X'], ['', '', ''], ['', '', 'O'], ['', '', ''], ['', '', '']]
    [['', '', ''], ['', '', 'X'], ['', '', 'O'], ['', '', ''], ['', '', '']]
    [['', '', ''], ['', '', ''], ['', 'X', 'O'], ['', '', ''], ['', '', '']]
    [['', '', ''], ['', '', ''], ['', '', 'O'], ['', '', 'X'], ['', '', '']]
    [['', '', ''], ['', '', ''], ['', '', 'O'], ['', '', ''], ['', '', 'X']]
  [['', '', ''], ['', '', ''], ['', '', ''], ['', '', 'O'], ['', '', '']]
    [['', '', 'O'], ['', '', ''], ['', '', ''], ['', '', 'O'], ['', '', '']]
    [['', '', ''], ['', '', 'O'], ['', '', ''], ['', '', 'O'], ['', '', '']]
    [['', '', ''], ['', '', ''], ['', '', 'O'], ['', '', 'O'], ['', '', '']]
    [['', '', ''], ['', '', ''], ['', '', ''], ['', 'O', 'O'], ['', '', '']]
    [['', '', ''], ['', '', ''], ['', '', ''], ['', '', 'O'], ['', '', 'O']]
    [['', '', 'X'], ['', '', ''], ['', '', ''], ['', '', 'O'], ['', '', '']]
    [['', '', ''], ['', '', 'X'], ['', '', ''], ['', '', 'O'], ['', '', '']]
    [['', '', ''], ['', '', ''], ['', '', 'X'], ['', '', 'O'], ['', '', '']]
    [['', '', ''], ['', '', ''], ['', '', ''], ['', 'X', 'O'], ['', '', '']]
    [['', '', ''], ['', '', ''], ['', '', ''], ['', '', 'O'], ['', '', 'X']]
  [['', '', ''], ['', '', ''], ['', '', ''], ['', '', ''], ['', '', 'O']]
    [['', '', 'O'], ['', '', ''], ['', '', ''], ['', '', ''], ['', '', 'O']]
    [['', '', ''], ['', '', 'O'], ['', '', ''], ['', '', ''], ['', '', 'O']]
    [['', '', ''], ['', '', ''], ['', '', 'O'], ['', '', ''], ['', '', 'O']]
    [['', '', ''], ['', '', ''], ['', '', ''], ['', '', 'O'], ['', '', 'O']]
    [['', '', ''], ['', '', ''], ['', '', ''], ['', '', ''], ['', 'O', 'O']]
    [['', '', 'X'], ['', '', ''], ['', '', ''], ['', '', ''], ['', '', 'O']]
    [['', '', ''], ['', '', 'X'], ['', '', ''], ['', '', ''], ['', '', 'O']]
    [['', '', ''], ['', '', ''], ['', '', 'X'], ['', '', ''], ['', '', 'O']]
    [['', '', ''], ['', '', ''], ['', '', ''], ['', '', 'X'], ['', '', 'O']]
    [['', '', ''], ['', '', ''], ['', '', ''], ['', '', ''], ['', 'X', 'O']]
  [['', '', 'X'], ['', '', ''], ['', '', ''], ['', '', ''], ['', '', '']]
    [['', 'O', 'X'], ['', '', ''], ['', '', ''], ['', '', ''], ['', '', '']]
    [['', '', 'X'], ['', '', 'O'], ['', '', ''], ['', '', ''], ['', '', '']]
    [['', '', 'X'], ['', '', ''], ['', '', 'O'], ['', '', ''], ['', '', '']]
    [['', '', 'X'], ['', '', ''], ['', '', ''], ['', '', 'O'], ['', '', '']]
    [['', '', 'X'], ['', '', ''], ['', '', ''], ['', '', ''], ['', '', 'O']]
    [['', 'X', 'X'], ['', '', ''], ['', '', ''], ['', '', ''], ['', '', '']]
    [['', '', 'X'], ['', '', 'X'], ['', '', ''], ['', '', ''], ['', '', '']]
    [['', '', 'X'], ['', '', ''], ['', '', 'X'], ['', '', ''], ['', '', '']]
    [['', '', 'X'], ['', '', ''], ['', '', ''], ['', '', 'X'], ['', '', '']]
    [['', '', 'X'], ['', '', ''], ['', '', ''], ['', '', ''], ['', '', 'X']]
  [['', '', ''], ['', '', 'X'], ['', '', ''], ['', '', ''], ['', '', '']]
    [['', '', 'O'], ['', '', 'X'], ['', '', ''], ['', '', ''], ['', '', '']]
    [['', '', ''], ['', 'O', 'X'], ['', '', ''], ['', '', ''], ['', '', '']]
    [['', '', ''], ['', '', 'X'], ['', '', 'O'], ['', '', ''], ['', '', '']]
    [['', '', ''], ['', '', 'X'], ['', '', ''], ['', '', 'O'], ['', '', '']]
    [['', '', ''], ['', '', 'X'], ['', '', ''], ['', '', ''], ['', '', 'O']]
    [['', '', 'X'], ['', '', 'X'], ['', '', ''], ['', '', ''], ['', '', '']]
    [['', '', ''], ['', 'X', 'X'], ['', '', ''], ['', '', ''], ['', '', '']]
    [['', '', ''], ['', '', 'X'], ['', '', 'X'], ['', '', ''], ['', '', '']]
    [['', '', ''], ['', '', 'X'], ['', '', ''], ['', '', 'X'], ['', '', '']]
    [['', '', ''], ['', '', 'X'], ['', '', ''], ['', '', ''], ['', '', 'X']]
  [['', '', ''], ['', '', ''], ['', '', 'X'], ['', '', ''], ['', '', '']]
    [['', '', 'O'], ['', '', ''], ['', '', 'X'], ['', '', ''], ['', '', '']]
    [['', '', ''], ['', '', 'O'], ['', '', 'X'], ['', '', ''], ['', '', '']]
    [['', '', ''], ['', '', ''], ['', 'O', 'X'], ['', '', ''], ['', '', '']]
    [['', '', ''], ['', '', ''], ['', '', 'X'], ['', '', 'O'], ['', '', '']]
    [['', '', ''], ['', '', ''], ['', '', 'X'], ['', '', ''], ['', '', 'O']]
    [['', '', 'X'], ['', '', ''], ['', '', 'X'], ['', '', ''], ['', '', '']]
    [['', '', ''], ['', '', 'X'], ['', '', 'X'], ['', '', ''], ['', '', '']]
    [['', '', ''], ['', '', ''], ['', 'X', 'X'], ['', '', ''], ['', '', '']]
    [['', '', ''], ['', '', ''], ['', '', 'X'], ['', '', 'X'], ['', '', '']]
    [['', '', ''], ['', '', ''], ['', '', 'X'], ['', '', ''], ['', '', 'X']]
  [['', '', ''], ['', '', ''], ['', '', ''], ['', '', 'X'], ['', '', '']]
    [['', '', 'O'], ['', '', ''], ['', '', ''], ['', '', 'X'], ['', '', '']]
    [['', '', ''], ['', '', 'O'], ['', '', ''], ['', '', 'X'], ['', '', '']]
    [['', '', ''], ['', '', ''], ['', '', 'O'], ['', '', 'X'], ['', '', '']]
    [['', '', ''], ['', '', ''], ['', '', ''], ['', 'O', 'X'], ['', '', '']]
    [['', '', ''], ['', '', ''], ['', '', ''], ['', '', 'X'], ['', '', 'O']]
    [['', '', 'X'], ['', '', ''], ['', '', ''], ['', '', 'X'], ['', '', '']]
    [['', '', ''], ['', '', 'X'], ['', '', ''], ['', '', 'X'], ['', '', '']]
    [['', '', ''], ['', '', ''], ['', '', 'X'], ['', '', 'X'], ['', '', '']]
    [['', '', ''], ['', '', ''], ['', '', ''], ['', 'X', 'X'], ['', '', '']]
    [['', '', ''], ['', '', ''], ['', '', ''], ['', '', 'X'], ['', '', 'X']]
  [['', '', ''], ['', '', ''], ['', '', ''], ['', '', ''], ['', '', 'X']]
    [['', '', 'O'], ['', '', ''], ['', '', ''], ['', '', ''], ['', '', 'X']]
    [['', '', ''], ['', '', 'O'], ['', '', ''], ['', '', ''], ['', '', 'X']]
    [['', '', ''], ['', '', ''], ['', '', 'O'], ['', '', ''], ['', '', 'X']]
    [['', '', ''], ['', '', ''], ['', '', ''], ['', '', 'O'], ['', '', 'X']]
    [['', '', ''], ['', '', ''], ['', '', ''], ['', '', ''], ['', 'O', 'X']]
    [['', '', 'X'], ['', '', ''], ['', '', ''], ['', '', ''], ['', '', 'X']]
    [['', '', ''], ['', '', 'X'], ['', '', ''], ['', '', ''], ['', '', 'X']]
    [['', '', ''], ['', '', ''], ['', '', 'X'], ['', '', ''], ['', '', 'X']]
    [['', '', ''], ['', '', ''], ['', '', ''], ['', '', 'X'], ['', '', 'X']]
    [['', '', ''], ['', '', ''], ['', '', ''], ['', '', ''], ['', 'X', 'X']]
"""

class Node:
    def __init__(self, state, depth):
        self.state = state
        self.depth = depth
        self.children = []

def generate_state_space_tree(initial_state, max_depth):
    root = Node(initial_state, 0)
    stack = [root]

    while stack:
        current_node = stack.pop()

        if current_node.depth + 1 < max_depth:
            for i, basket in enumerate(current_node.state):
                # Add a red ball
                new_basket = basket + ['O']
                new_state = current_node.state[:i] + [new_basket] + current_node.state[i+1:]
                child_node = Node(new_state, current_node.depth + 1)
                current_node.children.append(child_node)
                stack.append(child_node)

                # Add a blue ball
                if len(basket) < 3:
                    new_basket = basket + ['X']
                    new_state = current_node.state[:i] + [new_basket] + current_node.state[i+1:]
                    child_node = Node(new_state, current_node.depth + 1)
                    current_node.children.append(child_node)
                    stack.append(child_node)

    return root

def print_custom_format(node, level=0):
    print("  " * level + str(node.state))
    for child in node.children:
        print_custom_format(child, level + 1)

# Initial state: 5 empty baskets
initial_state = [[] for _ in range(5)]

# Generate state space tree up to a certain depth
root_node = generate_state_space_tree(initial_state, max_depth=3)

# Print state space tree using the specified format
print_custom_format(root_node)
